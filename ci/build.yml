name: CI
on: [push, pull_request]
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        sanitizer: [none, address, undefined]
    runs-on: ${{ matrix.os }}
    steps:
    - if: matrix.sanitizer != 'none'
      name: Set sanitizer flags
      run: |
        echo "CFLAGS=-fsanitize=${{ matrix.sanitizer }}" >> $GITHUB_ENV
        echo "CXXFLAGS=-fsanitize=${{ matrix.sanitizer }}" >> $GITHUB_ENV
        echo "LDFLAGS=-fsanitize=${{ matrix.sanitizer }}" >> $GITHUB_ENV
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install lint dependencies
      run: pip install ruff
    - name: Lint Python files
      run: ruff check contrib/**/*.py
    - name: Configure
      run: cmake -S . -B build
    - name: Build
      run: cmake --build build -j2
    - name: Test
      run: cmake --build build --target check

  fuzz:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Configure fuzzers
      run: cmake -S . -B fuzz_build -DCMAKE_CXX_FLAGS="-fsanitize=fuzzer,address" -DCMAKE_C_FLAGS="-fsanitize=fuzzer,address"
    - name: Build fuzzers
      run: cmake --build fuzz_build -j2 --target tx_deser_fuzz block_deser_fuzz script_interpreter_fuzz
    - name: Run fuzzers
      run: |
        ./fuzz_build/src/test/fuzz/tx_deser_fuzz -runs=1
        ./fuzz_build/src/test/fuzz/block_deser_fuzz -runs=1
        ./fuzz_build/src/test/fuzz/script_interpreter_fuzz -runs=1
